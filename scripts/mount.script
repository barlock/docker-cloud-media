#!/bin/bash
###############################################################################
# mount.remote - A script to mount GDrive remote for use with Plex
###############################################################################
# CONFIGURATION
###############################################################################
# shellcheck source=config

. "/usr/bin/variables"
###############################################################################
# FUNCTIONS
###############################################################################

mount_decrypt_gdrive () {
	# Make sure decrypted GD directory exists.
	if [ ! -d "${cloud_decrypt_dir}" ]; then
		mkdir -p "${cloud_decrypt_dir}"
	fi

    sleep 5
	if [ $(ps -ef | grep "encfs --extpass=" | grep -v "grep" | wc -l) == "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting decrypted Google Drive: ${cloud_decrypt_dir}"
		ENCFS6_CONFIG=/config/encfs6.xml encfs --extpass="echo ${ENCFS_PASSWORD}" $encfs_mount_options "${cloud_encrypt_dir}" "${cloud_decrypt_dir}" &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Decrypted mountpoint: ${cloud_decrypt_dir} already mounted."
	fi
}

mount_encrypt_local () {
    # Make sure combined plex media directory exists.
	if [ ! -d "${local_encrypt_dir}" ]; then
		mkdir -p "${local_encrypt_dir}"
	fi

	if [ $(ps -ef | grep "encfs --reverse" | grep -v "grep" | wc -l) == "0" ]; then
		echo "[ $(date $(printenv DATE_FORMAT)) ] Mounting encrypted local Drive: ${local_encrypt_dir}"
		ENCFS6_config=/config/encfs6.xml encfs --reverse --extpass="echo ${ENCFS_PASSWORD}" $encfs_mount_options "${local_media_dir}" "${local_encrypt_dir}" &
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Encrypted mountpoint: ${local_encrypt_dir} already mounted."
	fi
}

mount_union () {
	# Make sure combined plex media directory exists.
	if [ ! -d "${union_dir}" ]; then
		mkdir -p "${union_dir}"
	fi

	sleep 5
	while [ -z "$(ls -A ${cloud_decrypt_dir})" ]
	do
		echo "Waiting for mount ${cloud_decrypt_dir} ..."
		sleep 30
	done


	# Mount plex media directory if not already mounted.
	if [ $(ps -ef | grep "unionfs" | grep -v "grep" | wc -l) == "0" ]; then
		ufs_mounts="${local_media_dir}=RW:${cloud_decrypt_dir}=RO"

		echo "[ $(date tai$(printenv DATE_FORMAT)) ] Mounting union: ${union_dir}"
		unionfs $ufs_options "${ufs_mounts}" "${union_dir}"
	else
		echo "[ $(date $(printenv DATE_FORMAT)) ] Union mountpoint: ${union_dir} already mounted."
	fi
}

###############################################################################

if pidof -o %PPID -x "$(basename "$0")"; then
	echo "[ $(date $(printenv DATE_FORMAT)) ] Mount already in progress. Aborting."
else
    if [ "$(printenv REMOTE_DRIVE)" != "0" ]; then
        mount_decrypt_gdrive
    fi

    if [ "$(printenv LOCAL_DRIVE)" != "0" ]; then
        mount_encrypt_local
    fi

    if [ "$(printenv LOCAL_DRIVE)" != "0" ] && [ "$(printenv REMOTE_DRIVE)" != "0" ]; then
        mount_union
    fi
fi

sleep infinity